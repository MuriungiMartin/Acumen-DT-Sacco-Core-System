#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.6.3.0.2259")
	{
		type(ForNav.Report_6_3_0_2259; ForNavReport50219_v6_3_0_2259){}   
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50219 "SASRA FORM 4B"
{
	UsageCategory = ReportsAndAnalysis;
	RDLCLayout = './Layouts/SASRAFORM4B.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Loan Sector";"Loan Sector")
		{
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(Code_LoanSector; "Loan Sector".Code)
			{
			}
			column(Description_LoanSector; "Loan Sector".Description)
			{
			}
			dataitem("Loan Sub-Sector";"Loan Sub-Sector")
			{
				DataItemLink = No=field(Code);
				column(ReportForNavId_4; 4) {} // Autogenerated by ForNav - Do not delete
				column(Code_LoanSubSector; "Loan Sub-Sector".Code)
				{
				}
				column(Description_LoanSubSector; "Loan Sub-Sector".Description)
				{
				}
				dataitem("Loan Specific-Secto";"Loan Specific-Secto")
				{
					DataItemLink = No=field(Code);
					column(ReportForNavId_7; 7) {} // Autogenerated by ForNav - Do not delete
					column(Code_LoanSpecificSector; "Loan Specific-Secto".Code)
					{
					}
					column(Description_LoanSpecificSector; "Loan Specific-Secto".Description)
					{
					}
					column(Amount; Amount)
					{
					}
					trigger OnAfterGetRecord();
					begin
						Amount:=0;
						LoansR.Reset;
						LoansR.SetRange(LoansR."Specific Sector","Loan Specific-Secto".Code);
						LoansR.SetFilter(LoansR."Issued Date",Datefilter);
						if LoansR.Find('-') then begin
						  repeat
						   LoansR.CalcFields(LoansR."Outstanding Balance");
						   Amount:=Amount+ LoansR."Outstanding Balance";
						   until LoansR.Next=0;
						   end;
					end;
					
				}
			}
		}
	}

	requestpage
	{

  
		SaveValues = false;	  layout
		{
			area(content)
			{
				field(StartDate;StartDate)
				{
					ApplicationArea = Basic;
					Caption = 'Start Date';
				}
				field(EndDate;EndDate)
				{
					ApplicationArea = Basic;
					Caption = 'End Date';
				}
				field(ForNavOpenDesigner;ReportForNavOpenDesigner)
				{
					ApplicationArea = Basic;
					Caption = 'Design';
					Visible = ReportForNavAllowDesign;
						trigger OnValidate()
						begin
							ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
							CurrReport.RequestOptionsPage.Close();
						end;

				}
			}
		}

		actions
		{
		}
		trigger OnOpenPage()
		begin
			ReportForNavOpenDesigner := false;
		end;
	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
			 Datefilter:=Format(StartDate)+'..'+Format(EndDate);
		;ReportsForNavPre;
	end;
	var
		StartDate: Date;
		EndDate: Date;
		Amount: Decimal;
		Datefilter: Text;
		LoansR: Record "Loans Register";

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50219_v6_3_0_2259;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet Path;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}

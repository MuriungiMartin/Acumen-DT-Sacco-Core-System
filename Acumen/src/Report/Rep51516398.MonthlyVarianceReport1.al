#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516398_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 51516398 "Monthly Variance Report1"
{
    RDLCLayout = './Layouts/MonthlyVarianceReport1.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem(Monthly_Remittance; "Data Sheet Lines-Dist")
        {
            //DataItemLink = "Payroll No"=field(Field1);
            PrintOnlyIfDetail = false;
            column(ReportForNavId_4645; 4645) { } // Autogenerated by ForNav - Do not delete
            column(PayrollNo_MonthlyRemittance; Monthly_Remittance."Payroll No")
            {
            }
            column(Amount_MonthlyRemittance; Monthly_Remittance.Amount)
            {
            }
            column(Employer_MonthlyRemittance; Monthly_Remittance.Employer)
            {
            }
            column(MemberNo_MonthlyRemittance; Monthly_Remittance."Member No")
            {
            }
            column(LoanProductType_MonthlyRemittance; Monthly_Remittance."Loan Product Type")
            {
            }
            column(TransactionType_MonthlyRemittance; Monthly_Remittance."Transaction Type")
            {
            }
            column(DataSheetHeader_MonthlyRemittance; Monthly_Remittance."Data Sheet Header")
            {
            }
            column(Name_MonthlyRemittance; Monthly_Remittance.Name)
            {
            }
            dataitem("Checkoff Lines-Distributed"; "Checkoff Lines-Distributed")
            {
                DataItemLink = "Staff/Payroll No" = field("Payroll No");
                column(ReportForNavId_8; 8) { } // Autogenerated by ForNav - Do not delete
                column(Amount_CheckoffLinesDistributed; "Checkoff Lines-Distributed".Amount)
                {
                }
                column(StaffPayrollNo_CheckoffLinesDistributed; "Checkoff Lines-Distributed"."Staff/Payroll No")
                {
                }
                column(ReceiptHeaderNo_CheckoffLinesDistributed; "Checkoff Lines-Distributed"."Receipt Header No")
                {
                }
            }
            trigger OnPreDataItem();
            begin
                //CREATETOTALS(SHARES);
            end;

            trigger OnAfterGetRecord();
            begin
                //VARIANCE:="Expected Amount"-Amount;
                Loans.Reset;
                //Loans.SETRANGE(Loans."Client Code",INSURANCE);
                //IF Loans.FIND('-') THEN BEGIN
                //ADVANCE_P:=Loans."Loan Principle Repayment";
                //Monthly_Remittance.MODIFY
                //END;
                //SHARES:=ADVANCE_P-"Employee Name";
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                {
                    ApplicationArea = Basic;
                    Caption = 'Design';
                    Visible = ReportForNavAllowDesign;
                    trigger OnValidate()
                    begin
                        ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                        CurrReport.RequestOptionsPage.Close();
                    end;

                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        Company.Get();
        Company.CalcFields(Company.Picture);
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        /*  IF "COMPY INFOR".GET THEN
          BEGIN
  "COMPY INFOR".CALCFIELDS("COMPY INFOR".Picture);
          NAME:="COMPY INFOR".Name;
          END;
  */
        ;
        ReportsForNavPre;

    end;

    var
        VARIANCE: Decimal;
        Loans: Record "Loans Register";
        Loans_RegisterCaptionLbl: label 'Approved Loans Report';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        Loan_TypeCaptionLbl: label 'Loan Type';
        Client_No_CaptionLbl: label 'Client No.';
        Outstanding_LoanCaptionLbl: label 'Outstanding Loan';
        PeriodCaptionLbl: label 'Period';
        Approved_DateCaptionLbl: label 'Approved Date';
        Loan_TypeCaption_Control1102760043Lbl: label 'Loan Type';
        Verified_By__________________________________________________CaptionLbl: label 'Verified By..................................................';
        Confirmed_By__________________________________________________CaptionLbl: label 'Confirmed By..................................................';
        Sign________________________CaptionLbl: label 'Sign........................';
        Sign________________________Caption_Control1102755003Lbl: label 'Sign........................';
        Date________________________CaptionLbl: label 'Date........................';
        Date________________________Caption_Control1102755005Lbl: label 'Date........................';
        NameCreditOff: label 'Name......................................';
        NameCreditDate: label 'Date........................................';
        NameCreditSign: label 'Signature..................................';
        NameCreditMNG: label 'Name......................................';
        NameCreditMNGDate: label 'Date.....................................';
        NameCreditMNGSign: label 'Signature..................................';
        NameCEO: label 'Name........................................';
        NameCEOSign: label 'Signature...................................';
        NameCEODate: label 'Date.....................................';
        CreditCom1: label 'Name........................................';
        CreditCom1Sign: label 'Signature...................................';
        CreditCom1Date: label 'Date.........................................';
        CreditCom2: label 'Name........................................';
        CreditCom2Sign: label 'Signature....................................';
        CreditCom2Date: label 'Date..........................................';
        CreditCom3: label 'Name.........................................';
        CreditComDate3: label 'Date..........................................';
        CreditComSign3: label 'Signature..................................';
        Comment: label '....................';
        Company: Record "Company Information";

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516398_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}

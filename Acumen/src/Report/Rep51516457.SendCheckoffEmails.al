#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.6.3.0.2259")
	{
		type(ForNav.Report_6_3_0_2259; ForNavReport51516457_v6_3_0_2259){}   
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 51516457 "Send Check off Emails"
{
	RDLCLayout = './Layouts/SendCheckoffEmails.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Member Register";"Member Register")
		{
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(No_MembersRegister; "Member Register"."No.")
			{
			}
			trigger OnAfterGetRecord();
			begin
				AmountToDeduct:=0;
				AmountToDeduct:=FnExistsInCheckOff("Member Register"."No.");
				if AmountToDeduct > 0 then
				begin
				//MESSAGE('Total is %1',FnExistsInCheckOff("Members Register"."No."));
				FnGenerateCheckoffSlips("Member Register"."No.","Member Register"."No."+'_'+CheckoffNo+'.pdf');
				end;
			end;
			
		}
	}

	requestpage
	{

  
		SaveValues = false;	  layout
		{
			area(content)
			{
				field(CheckoffNo;CheckoffNo)
				{
					ApplicationArea = Basic;
				}
				field(ForNavOpenDesigner;ReportForNavOpenDesigner)
				{
					ApplicationArea = Basic;
					Caption = 'Design';
					Visible = ReportForNavAllowDesign;
						trigger OnValidate()
						begin
							ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
							CurrReport.RequestOptionsPage.Close();
						end;

				}
			}
		}

		actions
		{
		}
		trigger OnOpenPage()
		begin
			ReportForNavOpenDesigner := false;
		end;
	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		if CheckoffNo='' then
		  Error('Check off Number Must have a Value');
		;ReportsForNavPre;
	end;
	var
		CheckoffNo: Code[100];
		FILESPATH: label 'C:\CheckOff Reports\';
		AmountToDeduct: Decimal;

	procedure FnGenerateCheckoffSlips("member no": Code[50];path: Text[100])
	var
		filename: Text[100];
		ObjMember: Record "Member Register";
	begin
		filename := FILESPATH+path;
		if Exists(filename) then
		  Erase(filename);
		ObjMember.Reset;
		ObjMember.SetRange("No.", "member no");
		if ObjMember.Find('-') then begin
		  Report.SaveAsPdf(51516456,filename,ObjMember);
		end;
	end;

	local procedure FnExistsInCheckOff(MemberNo: Code[100]): Decimal
	var
		ObjCheckoffDetails: Record "Checkoff Processing Details(B)";
		TotalAmount: Decimal;
	begin
		TotalAmount:=0;
		ObjCheckoffDetails.Reset;
		ObjCheckoffDetails.SetRange("Member No",MemberNo);
		if ObjCheckoffDetails.Find('-') then
		begin
		  repeat
		  TotalAmount:=TotalAmount+ObjCheckoffDetails.Amount;
		  until ObjCheckoffDetails.Next=0;
		end;
		exit(TotalAmount);
	end;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport51516457_v6_3_0_2259;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet Path;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}

#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.6.3.0.2259")
	{
		type(ForNav.Report_6_3_0_2259; ForNavReport51516542_v6_3_0_2259){}   
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 51516542 "Unallocated Funds Checkoff"
{
	RDLCLayout = './Layouts/UnallocatedFundsCheckoff.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Checkoff Header-Distributed";"Checkoff Header-Distributed")
		{
			column(ReportForNavId_1102755000; 1102755000) {} // Autogenerated by ForNav - Do not delete
			column(UserId; UserId)
			{
			}
			column(Company_Name; Company.Name)
			{
			}
			column(Company_Address; Company.Address)
			{
			}
			column(Company_Address_2; Company."Address 2")
			{
			}
			column(Company_Phone_No; Company."Phone No.")
			{
			}
			column(Company_Fax_No; Company."Fax No.")
			{
			}
			column(Company_Picture; Company.Picture)
			{
			}
			column(Company_Email; Company."E-Mail")
			{
			}
			column(Amount_CheckoffHeaderDistributed; "Checkoff Header-Distributed".Amount)
			{
			}
			column(No_CheckoffHeaderDistributed; "Checkoff Header-Distributed".No)
			{
			}
			column(Remarks_CheckoffHeaderDistributed; "Checkoff Header-Distributed".Remarks)
			{
			}
			column(Postingdate_CheckoffHeaderDistributed; "Checkoff Header-Distributed"."Posting date")
			{
			}
			column(DocumentNo_CheckoffHeaderDistributed; "Checkoff Header-Distributed"."Document No")
			{
			}
			dataitem(ChecKoffLines;"Checkoff Lines-Distributed")
			{
				DataItemLink = "Receipt Header No"=field(No);
				DataItemTableView = sorting("Receipt Header No","Entry No") where("Special Code"=filter('SLOAN'|'SINTEREST'),"Loan No."=filter(''));
				column(ReportForNavId_1102755031; 1102755031) {} // Autogenerated by ForNav - Do not delete
				column(MemberNo_ChecKoffLines; ChecKoffLines."Member No.")
				{
				}
				column(Reference_ChecKoffLines; ChecKoffLines."Special Code")
				{
				}
				column(LoanType_ChecKoffLines; ChecKoffLines."Loan Type")
				{
				}
				column(LoanNo_ChecKoffLines; ChecKoffLines."Loan No.")
				{
				}
				column(StaffPayrollNo_ChecKoffLines; ChecKoffLines."Staff/Payroll No")
				{
				}
				column(Name_ChecKoffLines; ChecKoffLines.Name)
				{
				}
				column(Amount_ChecKoffLines; ChecKoffLines.Amount)
				{
				}
			}
		}
	}

	requestpage
	{

  
		SaveValues = false;	  layout
		{
			area(content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
						trigger OnValidate()
						begin
							ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
							CurrReport.RequestOptionsPage.Close();
						end;

					}
				}
			}
		}

		actions
		{
		}
		trigger OnOpenPage()
		begin
			ReportForNavOpenDesigner := false;
		end;
	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		 Company.Get();
		 Company.CalcFields(Company.Picture);
		;ReportsForNavPre;
	end;
	var
		OpenBalance: Decimal;
		CLosingBalance: Decimal;
		OpenBalanceXmas: Decimal;
		CLosingBalanceXmas: Decimal;
		Cust: Record "Member Register";
		OpeningBal: Decimal;
		ClosingBal: Decimal;
		FirstRec: Boolean;
		PrevBal: Integer;
		BalBF: Decimal;
		LoansR: Record "Loans Register";
		DateFilterBF: Text[150];
		SharesBF: Decimal;
		InsuranceBF: Decimal;
		LoanBF: Decimal;
		PrincipleBF: Decimal;
		InterestBF: Decimal;
		ShowZeroBal: Boolean;
		ClosingBalSHCAP: Decimal;
		ShareCapBF: Decimal;
		RiskBF: Decimal;
		DividendBF: Decimal;
		Company: Record "Company Information";
		OpenBalanceHse: Decimal;
		CLosingBalanceHse: Decimal;
		OpenBalanceDep1: Decimal;
		CLosingBalanceDep1: Decimal;
		OpenBalanceDep2: Decimal;
		CLosingBalanceDep2: Decimal;
		HseBF: Decimal;
		Dep1BF: Decimal;
		Dep2BF: Decimal;
		OpeningBalInt: Decimal;
		ClosingBalInt: Decimal;
		InterestPaid: Decimal;
		SumInterestPaid: Decimal;
		OpenBalanceRisk: Decimal;
		CLosingBalanceRisk: Decimal;
		OpenBalanceDividend: Decimal;
		ClosingBalanceDividend: Decimal;
		OpenBalanceHoliday: Decimal;
		ClosingBalanceHoliday: Decimal;
		LoanSetup: Record "Loan Products Setup";
		LoanName: Text[50];
		SaccoEmp: Record "Sacco Employers";
		EmployerName: Text[100];

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport51516542_v6_3_0_2259;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet Path;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}

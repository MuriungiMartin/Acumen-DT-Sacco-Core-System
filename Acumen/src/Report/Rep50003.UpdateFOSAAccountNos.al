#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport50003_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50003 "Update FOSA Account Nos"
{
    RDLCLayout = './Layouts/UpdateFOSAAccountNos.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem(Customer; Customer)
        {
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            trigger OnAfterGetRecord();
            begin
                /*ObjVendor.RESET;
				ObjVendor.SETRANGE(ObjVendor."BOSA Account No",Customer."No.");
				//ObjVendor.SETRANGE(ObjVendor."Account Type",'ORDINARY');
				IF ObjVendor.FIND('-') THEN
				  BEGIN
					REPEAT
					  ObjVendor."Personal No.":=Customer."Personal No";
					  ObjVendor."ID No.":=Customer."ID No.";
					  ObjVendor."Registration Date":=Customer."Registration Date";
					  ObjVendor."Date of Birth":=Customer."Date of Birth";
					  ObjVendor.MODIFY;
					  UNTIL ObjVendor.NEXT=0;
					IF ObjVendor."Account Type"='ORDINARY' THEN
					  BEGIN
						Customer."FOSA Account No.":=ObjVendor."No.";
						Customer.MODIFY;
						END;
					END;
					IF BUFFER.GET(BUFFER."Payroll number") THEN
					Customer."FOSA Account No.":=BUFFER."Payroll number";
					//////////////////*/
                /*  ObjCust.RESET;
              ObjCust.SETRANGE(ObjCust."No.",BUFFER."Payroll number");
              IF ObjCust.FIND('-') THEN
              BEGIN
              MESSAGE(FORMAT(ObjCust."No."));
                //Vendor."ID No.":=ObjCust."ID No.";
                //Vendor."Mobile Phone No":=ObjCust."Mobile Phone No";
               // Vendor."E-Mail":=ObjCust."E-Mail";
                //ObjCust."Employment Info":=ObjCust."Employment Info"::Employed;
                ObjCust."FOSA Account No.":=BUFFER."Member No";
                ObjCust.MODIFY;
              END;*/
                /*BOSAAcc.RESET;
				BOSAAcc.SETRANGE(BOSAAcc."Account Type",'601');
				BOSAAcc.SETRANGE(BOSAAcc."Member No","No.");
				IF BOSAAcc.FINDSET THEN BEGIN
				  "Share Capital No":=BOSAAcc."Account No";
				  MODIFY;
				  END;*/
                BUFFER.Reset;
                BUFFER.SetRange(BUFFER."Payroll number", Customer."No.");
                Message(Format(BUFFER."Payroll number"));
                if BUFFER.Find('-') then
            ;


        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    var
        ObjVendor: Record Vendor;
        BUFFER: Record "Buffer 2016-b";
        ObjCust: Record Customer;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport50003_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
